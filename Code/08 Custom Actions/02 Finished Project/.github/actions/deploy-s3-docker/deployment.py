import os
import boto3            # AWS SDK https://pypi.org/project/boto3/
import mimetypes
from botocore.config import Config


def run():
    # 1) Get some environment values
    # Inputs are generated by GitHub automatically, and they way to access is via 'INPUT_NAMEOFTHEINPUTDECLARED'
    # https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#example-specifying-inputs
    bucket = os.environ['INPUT_BUCKET']
    bucket_region = os.environ['INPUT_BUCKET-REGION']
    dist_folder = os.environ['INPUT_DIST-FOLDER']

    # 2) Upload files to S3
    configuration = Config(region_name=bucket_region)

    s3_client = boto3.client('s3', config=configuration)

    for root, subdirs, files in os.walk(dist_folder):
        for file in files:
            s3_client.upload_file(
                os.path.join(root, file),
                bucket,
                os.path.join(root, file).replace(dist_folder + '/', ''),
                ExtraArgs={"ContentType": mimetypes.guess_type(file)[0]}
            )

    # 3) Get the S3 website url, setting as output of the Docker custom action
    website_url = f'http://{bucket}.s3-website-{bucket_region}.amazonaws.com'
    # The below code prints the 'website-url' value (the old ::set-output syntax isn't supported anymore - that's the only thing that changed though)
    with open(os.environ['GITHUB_OUTPUT'], 'a') as gh_output:
        print(f'website-url={website_url}', file=gh_output)
        # print in Python === echo in shell


if __name__ == '__main__':
    run()
